apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-volumes
  namespace: webapp-volumes
  labels:
    app: webapp-volumes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp-volumes
  template:
    metadata:
      labels:
        app: webapp-volumes
    spec:
      # Add the server as an NFS volume for the pod
      volumes:
        - name: nfs-volume
          nfs: 
            # URL for the NFS server
            server: nfs.local 
            path: /var/nfs
      containers:
      - name: webapp-volumes
        image: docker.io/alexwhen/docker-2048:latest
        ports:
        - containerPort: 22
          name: ssh
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 80 
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
    name: volumes-service
    namespace: webapp-volumes
spec:
    selector:
      app: webapp-volumes
    ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: volumes-ingress
  namespace: webapp-volumes
  labels:
    app: webapp-volumes
  annotations:
      haproxy.org/path-rewrite: "/"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: "Prefix"
        backend:
          service:
            name: volumes-service
            port:
              number: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  namespace: webapp-volumes
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/nfs
    server: nfs.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: webapp-volumes 
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-configmap
  namespace: webapp-volumes
data:
  servers-increment: "42"
  ssl-redirect: "OFF"